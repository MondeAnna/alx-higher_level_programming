>>> add_integer = __import__("0-add_integer").add_integer
>>>
>>> erroneous_types = [None, str, dict, list, tuple, set, hex, bin, oct, bool]
>>>
>>> for type_ in erroneous_types:
...     add_integer(type_, 0)
...
Traceback (most recent call last):
TypeError: a must be an integer
>>>
>>> for type_ in erroneous_types:
...     add_integer(0, type_)
...
Traceback (most recent call last):
TypeError: b must be an integer
>>>
>>> add_integer(float("inf"), 0)
Traceback (most recent call last):
OverflowError: cannot convert float infinity a to integer
>>>
>>> add_integer(0, -float("inf"))
Traceback (most recent call last):
OverflowError: cannot convert float infinity b to integer
>>>
>>> add_integer(0)
98
>>>
>>> add_integer(0, 1)
1
>>>
>>> add_integer(0, -1)
-1
>>>
>>> add_integer(0, 0)
0
>>>
>>> add_integer(-1, 0)
-1
>>>
>>> add_integer(1, 0)
1
